apiVersion: v1
kind: ConfigMap
metadata:
  name: product-service-config
  namespace: order-system
data:
  SERVER_ADDRESS: ":8083"
  DB_HOST: "postgres-product"
  DB_PORT: "5432"
  DB_NAME: "product_service"
  DB_SSLMODE: "disable"
  REDIS_ADDRESS: "redis-product:6379"
  IMAGE_STORAGE_PATH: "/app/images"
  MAX_PAGE_SIZE: "100"
---
apiVersion: v1
kind: Secret
metadata:
  name: product-service-secret
  namespace: order-system
type: Opaque
data:
  DB_USER: cG9zdGdyZXM= # postgres
  DB_PASSWORD: cG9zdGdyZXM= # postgres
  REDIS_PASSWORD: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  namespace: order-system
  labels:
    app: product-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
        - name: product-service
          image: yourusername/product-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          envFrom:
            - configMapRef:
                name: product-service-config
            - secretRef:
                name: product-service-secret
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: product-images
              mountPath: /app/images
          readinessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8083
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: product-images
          persistentVolumeClaim:
            claimName: product-images-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: order-system
spec:
  selector:
    app: product-service
  ports:
    - port: 8083
      targetPort: 8083
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-product
  namespace: order-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-product
  template:
    metadata:
      labels:
        app: postgres-product
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: product_service
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: product-service-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product-service-secret
                  key: DB_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-product-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-product
  namespace: order-system
spec:
  selector:
    app: postgres-product
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-product-pvc
  namespace: order-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-product
  namespace: order-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-product
  template:
    metadata:
      labels:
        app: redis-product
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-product-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-product
  namespace: order-system
spec:
  selector:
    app: redis-product
  ports:
    - port: 6379
      targetPort: 6379
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-product-pvc
  namespace: order-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: product-images-pvc
  namespace: order-system
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
