{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://ordermanagersystem-auth-service.onrender.com/api/v1';\n\n// 創建 Axios 實例\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 請求攔截器\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 響應攔截器\naxiosInstance.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 認證服務的 API 方法\nexport const authService = {\n  login: credentials => axiosInstance.post('/auth/login', credentials),\n  register: userData => axiosInstance.post('/auth/register', userData),\n  getPreferences: async () => {\n    try {\n      const response = await axiosInstance.get('/user/preferences');\n      return response.data;\n    } catch (error) {\n      console.error('獲取用戶偏好設置失敗:', error);\n      throw error;\n    }\n  },\n  updatePreferences: async preferences => {\n    try {\n      const response = await axiosInstance.put('/user/preferences', preferences);\n      return response.data;\n    } catch (error) {\n      console.error('更新用戶偏好設置失敗:', error);\n      throw error;\n    }\n  },\n  getAddresses: async () => {\n    try {\n      const response = await axiosInstance.get('/user/addresses');\n      return response.data;\n    } catch (error) {\n      console.error('獲取地址列表失敗:', error);\n      throw error;\n    }\n  },\n  createAddress: async addressData => {\n    try {\n      const response = await axiosInstance.post('/user/addresses', addressData);\n      return response.data;\n    } catch (error) {\n      console.error('創建地址失敗:', error);\n      throw error;\n    }\n  },\n  updateAddress: async (id, addressData) => {\n    try {\n      const response = await axiosInstance.put(`/user/addresses/${id}`, addressData);\n      return response.data;\n    } catch (error) {\n      console.error('更新地址失敗:', error);\n      throw error;\n    }\n  },\n  deleteAddress: async id => {\n    try {\n      const response = await axiosInstance.delete(`/user/addresses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('刪除地址失敗:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authService","login","credentials","post","register","userData","getPreferences","get","data","console","updatePreferences","preferences","put","getAddresses","createAddress","addressData","updateAddress","id","deleteAddress","delete"],"sources":["/Users/sumingkai/Documents/OrderManagerSystem/frontend/src/services/authApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://ordermanagersystem-auth-service.onrender.com/api/v1';\n\n// 創建 Axios 實例\nconst axiosInstance = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// 請求攔截器\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// 響應攔截器\naxiosInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\n// 認證服務的 API 方法\nexport const authService = {\n    login: (credentials) => axiosInstance.post('/auth/login', credentials),\n    register: (userData) => axiosInstance.post('/auth/register', userData),\n    getPreferences: async () => {\n        try {\n            const response = await axiosInstance.get('/user/preferences');\n            return response.data;\n        } catch (error) {\n            console.error('獲取用戶偏好設置失敗:', error);\n            throw error;\n        }\n    },\n    updatePreferences: async (preferences) => {\n        try {\n            const response = await axiosInstance.put('/user/preferences', preferences);\n            return response.data;\n        } catch (error) {\n            console.error('更新用戶偏好設置失敗:', error);\n            throw error;\n        }\n    },\n    getAddresses: async () => {\n        try {\n            const response = await axiosInstance.get('/user/addresses');\n            return response.data;\n        } catch (error) {\n            console.error('獲取地址列表失敗:', error);\n            throw error;\n        }\n    },\n    createAddress: async (addressData) => {\n        try {\n            const response = await axiosInstance.post('/user/addresses', addressData);\n            return response.data;\n        } catch (error) {\n            console.error('創建地址失敗:', error);\n            throw error;\n        }\n    },\n    updateAddress: async (id, addressData) => {\n        try {\n            const response = await axiosInstance.put(`/user/addresses/${id}`, addressData);\n            return response.data;\n        } catch (error) {\n            console.error('更新地址失敗:', error);\n            throw error;\n        }\n    },\n    deleteAddress: async (id) => {\n        try {\n            const response = await axiosInstance.delete(`/user/addresses/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('刪除地址失敗:', error);\n            throw error;\n        }\n    },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}