{"ast":null,"code":"import axios from 'axios';\n\n// const API_URL = 'https://ordermanagersystem-auth-service.onrender.com';\nconst API_URL = 'http://localhost:8083';\n\n// 創建 axios 實例\nconst axiosInstance = axios.create({\n  baseURL: `${API_URL}/api/v1`,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 請求攔截器，添加 token\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // 或者從您的 auth context 獲取\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 響應攔截器\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // 處理 401 未授權錯誤\n    // if (error.response.status === 401) {\n    //     localStorage.removeItem('token');\n    //     window.location.href = '/login';\n    // }\n    console.error('Response error:', error.response);\n  } else if (error.request) {\n    console.error('Request error:', error.request);\n  } else {\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// 認證服務的 API 方法\nexport const authService = {\n  login: credentials => axiosInstance.post('/auth/login', credentials),\n  register: userData => axiosInstance.post('/auth/register', userData),\n  getPreferences: () => axiosInstance.get('/user/preferences'),\n  updatePreferences: async preferences => {\n    try {\n      const response = await axiosInstance.put('/user/preferences', preferences);\n      return response;\n    } catch (error) {\n      console.error('更新用戶偏好設置失敗:', error);\n      throw error;\n    }\n  },\n  getAddresses: () => axiosInstance.get('/user/addresses'),\n  createAddress: async addressData => {\n    try {\n      const response = await axiosInstance.post('/user/addresses', addressData);\n      return response;\n    } catch (error) {\n      console.error('創建地址失敗:', error);\n      throw error;\n    }\n  },\n  updateAddress: async (id, addressData) => {\n    try {\n      const response = await axiosInstance.put(`/user/addresses/${id}`, addressData);\n      return response;\n    } catch (error) {\n      console.error('更新地址失敗:', error);\n      throw error;\n    }\n  },\n  deleteAddress: async id => {\n    try {\n      const response = await axiosInstance.delete(`/user/addresses/${id}`);\n      return response;\n    } catch (error) {\n      console.error('刪除地址失敗:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","console","message","authService","login","credentials","post","register","userData","getPreferences","get","updatePreferences","preferences","put","getAddresses","createAddress","addressData","updateAddress","id","deleteAddress","delete"],"sources":["/Users/sumingkai/Documents/OrderManagerSystem/frontend/src/services/authApi.js"],"sourcesContent":["import axios from 'axios';\n\n// const API_URL = 'https://ordermanagersystem-auth-service.onrender.com';\nconst API_URL = 'http://localhost:8083';\n\n// 創建 axios 實例\nconst axiosInstance = axios.create({\n    baseURL: `${API_URL}/api/v1`,\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n    }\n});\n\n// 請求攔截器，添加 token\naxiosInstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token'); // 或者從您的 auth context 獲取\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// 響應攔截器\naxiosInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response) {\n            // 處理 401 未授權錯誤\n            // if (error.response.status === 401) {\n            //     localStorage.removeItem('token');\n            //     window.location.href = '/login';\n            // }\n            console.error('Response error:', error.response);\n        } else if (error.request) {\n            console.error('Request error:', error.request);\n        } else {\n            console.error('Error:', error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\n// 認證服務的 API 方法\nexport const authService = {\n    login: (credentials) => axiosInstance.post('/auth/login', credentials),\n    register: (userData) => axiosInstance.post('/auth/register', userData),\n    getPreferences: () => axiosInstance.get('/user/preferences'),\n    updatePreferences: async (preferences) => {\n        try {\n            const response = await axiosInstance.put('/user/preferences', preferences);\n            return response;\n        } catch (error) {\n            console.error('更新用戶偏好設置失敗:', error);\n            throw error;\n        }\n    },\n    getAddresses: () => axiosInstance.get('/user/addresses'),\n    createAddress: async (addressData) => {\n        try {\n            const response = await axiosInstance.post('/user/addresses', addressData);\n            return response;\n        } catch (error) {\n            console.error('創建地址失敗:', error);\n            throw error;\n        }\n    },\n    updateAddress: async (id, addressData) => {\n        try {\n            const response = await axiosInstance.put(`/user/addresses/${id}`, addressData);\n            return response;\n        } catch (error) {\n            console.error('更新地址失敗:', error);\n            throw error;\n        }\n    },\n    deleteAddress: async (id) => {\n        try {\n            const response = await axiosInstance.delete(`/user/addresses/${id}`);\n            return response;\n        } catch (error) {\n            console.error('刪除地址失敗:', error);\n            throw error;\n        }\n    },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}